// <auto-generated />
using System;
using ExcelProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExcelProject.Migrations
{
    [DbContext(typeof(NewPetContext))]
    [Migration("20220913131719_Initdb")]
    partial class Initdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExcelProject.Models.tActivity", b =>
                {
                    b.Property<int>("fActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fActivityID"), 1L, 1);

                    b.Property<DateTime?>("fClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fContext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fDMPic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fEffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fActivityID");

                    b.ToTable("tActivities");
                });

            modelBuilder.Entity("ExcelProject.Models.tAdoptMessage", b =>
                {
                    b.Property<int>("fMessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fMessageID"), 1L, 1);

                    b.Property<string>("fContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fMemberID")
                        .HasColumnType("int");

                    b.Property<int>("fPetID")
                        .HasColumnType("int");

                    b.Property<int>("tMemberfMemberID")
                        .HasColumnType("int");

                    b.Property<int>("tPetMemberfPetID")
                        .HasColumnType("int");

                    b.HasKey("fMessageID");

                    b.HasIndex("tMemberfMemberID");

                    b.HasIndex("tPetMemberfPetID");

                    b.ToTable("tAdoptMessages");
                });

            modelBuilder.Entity("ExcelProject.Models.tBreed", b =>
                {
                    b.Property<int>("fBreedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fBreedID"), 1L, 1);

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fPetClassID")
                        .HasColumnType("int");

                    b.Property<string>("fPic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tPetClassfPetClassID")
                        .HasColumnType("int");

                    b.HasKey("fBreedID");

                    b.HasIndex("tPetClassfPetClassID");

                    b.ToTable("tBreeds");
                });

            modelBuilder.Entity("ExcelProject.Models.tCategory", b =>
                {
                    b.Property<int>("fCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fCategoryID"), 1L, 1);

                    b.Property<string>("fDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fCategoryID");

                    b.ToTable("tCategories");
                });

            modelBuilder.Entity("ExcelProject.Models.tCity", b =>
                {
                    b.Property<int>("fCityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fCityID"), 1L, 1);

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fCityID");

                    b.ToTable("tCities");
                });

            modelBuilder.Entity("ExcelProject.Models.tComment", b =>
                {
                    b.Property<int>("fId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fId"), 1L, 1);

                    b.Property<int?>("fArticleID")
                        .HasColumnType("int");

                    b.Property<string>("fContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fMemberID")
                        .HasColumnType("int");

                    b.Property<int>("tDiscussionfArticleID")
                        .HasColumnType("int");

                    b.Property<int>("tMemberfMemberID")
                        .HasColumnType("int");

                    b.HasKey("fId");

                    b.HasIndex("tDiscussionfArticleID");

                    b.HasIndex("tMemberfMemberID");

                    b.ToTable("tComments");
                });

            modelBuilder.Entity("ExcelProject.Models.tDiscussion", b =>
                {
                    b.Property<int>("fArticleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fArticleID"), 1L, 1);

                    b.Property<int?>("fCommenttime")
                        .HasColumnType("int");

                    b.Property<string>("fContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("fDiscussionClassID")
                        .HasColumnType("int");

                    b.Property<int?>("fLike")
                        .HasColumnType("int");

                    b.Property<bool?>("fLock")
                        .HasColumnType("bit");

                    b.Property<int?>("fMemberID")
                        .HasColumnType("int");

                    b.Property<string>("fPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("fReportcheck")
                        .HasColumnType("bit");

                    b.Property<string>("fTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tMemberfMemberID")
                        .HasColumnType("int");

                    b.HasKey("fArticleID");

                    b.HasIndex("tMemberfMemberID");

                    b.ToTable("tDiscussions");
                });

            modelBuilder.Entity("ExcelProject.Models.tEmployee", b =>
                {
                    b.Property<int>("fEmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fEmployeeID"), 1L, 1);

                    b.Property<string>("fAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fEmployeeID");

                    b.ToTable("tEmployees");
                });

            modelBuilder.Entity("ExcelProject.Models.tFavorite", b =>
                {
                    b.Property<int>("fFavoriteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fFavoriteID"), 1L, 1);

                    b.Property<int?>("fArticleID")
                        .HasColumnType("int");

                    b.Property<int?>("fMemberID")
                        .HasColumnType("int");

                    b.Property<int>("tDiscussionfArticleID")
                        .HasColumnType("int");

                    b.Property<int>("tMemberfMemberID")
                        .HasColumnType("int");

                    b.HasKey("fFavoriteID");

                    b.HasIndex("tDiscussionfArticleID");

                    b.HasIndex("tMemberfMemberID");

                    b.ToTable("tFavorites");
                });

            modelBuilder.Entity("ExcelProject.Models.tFoundPet", b =>
                {
                    b.Property<int>("fFoundPetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fFoundPetID"), 1L, 1);

                    b.Property<int>("fBreedID")
                        .HasColumnType("int");

                    b.Property<string>("fChipID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fCityID")
                        .HasColumnType("int");

                    b.Property<string>("fCollar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fFoundTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("fGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fMemberID")
                        .HasColumnType("int");

                    b.Property<int>("fPetClassID")
                        .HasColumnType("int");

                    b.Property<string>("fPetPic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fRegionID")
                        .HasColumnType("int");

                    b.Property<string>("fRemark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fSignInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fSkin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tBreedfBreedID")
                        .HasColumnType("int");

                    b.Property<int>("tCityfCityID")
                        .HasColumnType("int");

                    b.Property<int>("tMemberfMemberID")
                        .HasColumnType("int");

                    b.Property<int>("tPetClassfPetClassID")
                        .HasColumnType("int");

                    b.Property<int>("tRegionfRegionID")
                        .HasColumnType("int");

                    b.HasKey("fFoundPetID");

                    b.HasIndex("tBreedfBreedID");

                    b.HasIndex("tCityfCityID");

                    b.HasIndex("tMemberfMemberID");

                    b.HasIndex("tPetClassfPetClassID");

                    b.HasIndex("tRegionfRegionID");

                    b.ToTable("tFoundPets");
                });

            modelBuilder.Entity("ExcelProject.Models.tLike", b =>
                {
                    b.Property<int>("fLikeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fLikeID"), 1L, 1);

                    b.Property<int?>("fArticleID")
                        .HasColumnType("int");

                    b.Property<int?>("fMemberID")
                        .HasColumnType("int");

                    b.Property<int>("tDiscussionfArticleID")
                        .HasColumnType("int");

                    b.Property<int>("tMemberfMemberID")
                        .HasColumnType("int");

                    b.HasKey("fLikeID");

                    b.HasIndex("tDiscussionfArticleID");

                    b.HasIndex("tMemberfMemberID");

                    b.ToTable("tLikes");
                });

            modelBuilder.Entity("ExcelProject.Models.tLogInWay", b =>
                {
                    b.Property<int>("fLogInWayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fLogInWayID"), 1L, 1);

                    b.Property<string>("fIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fLogInWayID");

                    b.ToTable("tLogInWays");
                });

            modelBuilder.Entity("ExcelProject.Models.tLostPet", b =>
                {
                    b.Property<int>("fLostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fLostID"), 1L, 1);

                    b.Property<string>("fCompareLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fLostPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fLostTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("fPetID")
                        .HasColumnType("int");

                    b.Property<string>("fRemark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("fReward")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("fSignInDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("tPetMemberfPetID")
                        .HasColumnType("int");

                    b.HasKey("fLostID");

                    b.HasIndex("tPetMemberfPetID");

                    b.ToTable("tLostPets");
                });

            modelBuilder.Entity("ExcelProject.Models.tMember", b =>
                {
                    b.Property<int>("fMemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fMemberID"), 1L, 1);

                    b.Property<string>("fAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fAddressDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("fCityID")
                        .HasColumnType("int");

                    b.Property<string>("fEMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fEnconomicStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fIDCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fLogInWayID")
                        .HasColumnType("int");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fNickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("fPetCoin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("fPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fRecentLogInDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("fRegionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fRegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("tCityfCityID")
                        .HasColumnType("int");

                    b.Property<int>("tRegionfRegionID")
                        .HasColumnType("int");

                    b.HasKey("fMemberID");

                    b.HasIndex("tCityfCityID");

                    b.HasIndex("tRegionfRegionID");

                    b.ToTable("tMembers");
                });

            modelBuilder.Entity("ExcelProject.Models.tOrder", b =>
                {
                    b.Property<int>("fOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fOrderID"), 1L, 1);

                    b.Property<string>("fAddressDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fCityID")
                        .HasColumnType("int");

                    b.Property<int>("fMemberID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("fPayWayID")
                        .HasColumnType("int");

                    b.Property<string>("fReceiverMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fReceiverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fReceiverPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fRegionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fShipOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tCityfCityID")
                        .HasColumnType("int");

                    b.Property<int>("tMemberfMemberID")
                        .HasColumnType("int");

                    b.Property<int>("tPayWayfPayWayID")
                        .HasColumnType("int");

                    b.Property<int>("tRegionfRegionID")
                        .HasColumnType("int");

                    b.HasKey("fOrderID");

                    b.HasIndex("tCityfCityID");

                    b.HasIndex("tMemberfMemberID");

                    b.HasIndex("tPayWayfPayWayID");

                    b.HasIndex("tRegionfRegionID");

                    b.ToTable("tOrders");
                });

            modelBuilder.Entity("ExcelProject.Models.tOrder_Detail", b =>
                {
                    b.Property<int>("fOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fOrderID"), 1L, 1);

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fPic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fProductID")
                        .HasColumnType("int");

                    b.Property<int>("fQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("fUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("tOrderfOrderID")
                        .HasColumnType("int");

                    b.Property<int>("tProductfProductID")
                        .HasColumnType("int");

                    b.HasKey("fOrderID");

                    b.HasIndex("tOrderfOrderID");

                    b.HasIndex("tProductfProductID");

                    b.ToTable("tOrder_Detail");
                });

            modelBuilder.Entity("ExcelProject.Models.tPayWay", b =>
                {
                    b.Property<int>("fPayWayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fPayWayID"), 1L, 1);

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fPayWayID");

                    b.ToTable("tPayWays");
                });

            modelBuilder.Entity("ExcelProject.Models.tPetClass", b =>
                {
                    b.Property<int>("fPetClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fPetClassID"), 1L, 1);

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fPetClassID");

                    b.ToTable("tPetClasses");
                });

            modelBuilder.Entity("ExcelProject.Models.tPetMember", b =>
                {
                    b.Property<int>("fPetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fPetID"), 1L, 1);

                    b.Property<int>("fBreedID")
                        .HasColumnType("int");

                    b.Property<string>("fChipID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fCityID")
                        .HasColumnType("int");

                    b.Property<string>("fCollar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fMemberID")
                        .HasColumnType("int");

                    b.Property<int>("fPetClassID")
                        .HasColumnType("int");

                    b.Property<string>("fPetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fPetPic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fRegionID")
                        .HasColumnType("int");

                    b.Property<string>("fSkin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tBreedfBreedID")
                        .HasColumnType("int");

                    b.Property<int>("tCityfCityID")
                        .HasColumnType("int");

                    b.Property<int>("tMemberfMemberID")
                        .HasColumnType("int");

                    b.Property<int>("tPetClassfPetClassID")
                        .HasColumnType("int");

                    b.Property<int>("tRegionfRegionID")
                        .HasColumnType("int");

                    b.HasKey("fPetID");

                    b.HasIndex("tBreedfBreedID");

                    b.HasIndex("tCityfCityID");

                    b.HasIndex("tMemberfMemberID");

                    b.HasIndex("tPetClassfPetClassID");

                    b.HasIndex("tRegionfRegionID");

                    b.ToTable("tPetMembers");
                });

            modelBuilder.Entity("ExcelProject.Models.tProduct", b =>
                {
                    b.Property<int>("fProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fProductID"), 1L, 1);

                    b.Property<int>("fCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("fDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fOnShelfDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fPic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fSafeStock")
                        .HasColumnType("int");

                    b.Property<int>("fSupplierID")
                        .HasColumnType("int");

                    b.Property<int>("fUnitInStock")
                        .HasColumnType("int");

                    b.Property<int>("fUnitOnOrder")
                        .HasColumnType("int");

                    b.Property<decimal>("fUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("tCategoryfCategoryID")
                        .HasColumnType("int");

                    b.Property<int>("tSupplierfSupplierID")
                        .HasColumnType("int");

                    b.HasKey("fProductID");

                    b.HasIndex("tCategoryfCategoryID");

                    b.HasIndex("tSupplierfSupplierID");

                    b.ToTable("tProducts");
                });

            modelBuilder.Entity("ExcelProject.Models.tPurchase", b =>
                {
                    b.Property<int>("fPurchaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fPurchaseID"), 1L, 1);

                    b.Property<DateTime>("fPurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("fPurchaseID");

                    b.ToTable("tPurchases");
                });

            modelBuilder.Entity("ExcelProject.Models.tPurchase_Detials", b =>
                {
                    b.Property<int>("fPurchaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fPurchaseID"), 1L, 1);

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fPic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fProductID")
                        .HasColumnType("int");

                    b.Property<int>("fQuantity")
                        .HasColumnType("int");

                    b.Property<int>("fSupplierID")
                        .HasColumnType("int");

                    b.Property<decimal>("fUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("tProductfProductID")
                        .HasColumnType("int");

                    b.Property<int>("tPurchasefPurchaseID")
                        .HasColumnType("int");

                    b.Property<int>("tSupplierfSupplierID")
                        .HasColumnType("int");

                    b.HasKey("fPurchaseID");

                    b.HasIndex("tProductfProductID");

                    b.HasIndex("tPurchasefPurchaseID");

                    b.HasIndex("tSupplierfSupplierID");

                    b.ToTable("tPurchase_Detials");
                });

            modelBuilder.Entity("ExcelProject.Models.tPurchaseShoppingCart", b =>
                {
                    b.Property<int>("fCartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fCartID"), 1L, 1);

                    b.Property<string>("fPic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fProductID")
                        .HasColumnType("int");

                    b.Property<int>("fQuantity")
                        .HasColumnType("int");

                    b.Property<int>("fSupplierID")
                        .HasColumnType("int");

                    b.Property<decimal>("fUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("tProductfProductID")
                        .HasColumnType("int");

                    b.Property<int>("tSupplierfSupplierID")
                        .HasColumnType("int");

                    b.HasKey("fCartID");

                    b.HasIndex("tProductfProductID");

                    b.HasIndex("tSupplierfSupplierID");

                    b.ToTable("tPurchaseShoppingCarts");
                });

            modelBuilder.Entity("ExcelProject.Models.tRegion", b =>
                {
                    b.Property<int>("fRegionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fRegionID"), 1L, 1);

                    b.Property<int>("fCityID")
                        .HasColumnType("int");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tCityfCityID")
                        .HasColumnType("int");

                    b.HasKey("fRegionID");

                    b.HasIndex("tCityfCityID");

                    b.ToTable("tRegions");
                });

            modelBuilder.Entity("ExcelProject.Models.tReply", b =>
                {
                    b.Property<int>("fReplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fReplyID"), 1L, 1);

                    b.Property<int>("fArticleID")
                        .HasColumnType("int");

                    b.Property<string>("fContext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fMemberID")
                        .HasColumnType("int");

                    b.HasKey("fReplyID");

                    b.ToTable("tReplies");
                });

            modelBuilder.Entity("ExcelProject.Models.tReport", b =>
                {
                    b.Property<int>("fReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fReportID"), 1L, 1);

                    b.Property<int>("fArticleID")
                        .HasColumnType("int");

                    b.Property<int>("fMemberID")
                        .HasColumnType("int");

                    b.Property<string>("fReportComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tDiscussionfArticleID")
                        .HasColumnType("int");

                    b.Property<int>("tMemberfMemberID")
                        .HasColumnType("int");

                    b.HasKey("fReportID");

                    b.HasIndex("tDiscussionfArticleID");

                    b.HasIndex("tMemberfMemberID");

                    b.ToTable("tReports");
                });

            modelBuilder.Entity("ExcelProject.Models.tShipVia", b =>
                {
                    b.Property<int>("fShipViaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fShipViaID"), 1L, 1);

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fShipViaID");

                    b.ToTable("tShipVias");
                });

            modelBuilder.Entity("ExcelProject.Models.tShoppingCart", b =>
                {
                    b.Property<int>("fCartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fCartID"), 1L, 1);

                    b.Property<int>("fMemberID")
                        .HasColumnType("int");

                    b.Property<string>("fPic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fProductID")
                        .HasColumnType("int");

                    b.Property<int>("fQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("fUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("tMemberfMemberID")
                        .HasColumnType("int");

                    b.Property<int>("tProductfProductID")
                        .HasColumnType("int");

                    b.HasKey("fCartID");

                    b.HasIndex("tMemberfMemberID");

                    b.HasIndex("tProductfProductID");

                    b.ToTable("tShoppingCarts");
                });

            modelBuilder.Entity("ExcelProject.Models.tSupplier", b =>
                {
                    b.Property<int>("fSupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fSupplierID"), 1L, 1);

                    b.Property<string>("fAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fCityID")
                        .HasColumnType("int");

                    b.Property<string>("fContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fRegionID")
                        .HasColumnType("int");

                    b.Property<int>("tCityfCityID")
                        .HasColumnType("int");

                    b.Property<int>("tRegionfRegionID")
                        .HasColumnType("int");

                    b.HasKey("fSupplierID");

                    b.HasIndex("tCityfCityID");

                    b.HasIndex("tRegionfRegionID");

                    b.ToTable("tSuppliers");
                });

            modelBuilder.Entity("ExcelProject.Models.tAdoptMessage", b =>
                {
                    b.HasOne("ExcelProject.Models.tMember", "tMember")
                        .WithMany("tAdoptMessages")
                        .HasForeignKey("tMemberfMemberID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tPetMember", "tPetMember")
                        .WithMany("tAdoptMessages")
                        .HasForeignKey("tPetMemberfPetID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tMember");

                    b.Navigation("tPetMember");
                });

            modelBuilder.Entity("ExcelProject.Models.tBreed", b =>
                {
                    b.HasOne("ExcelProject.Models.tPetClass", "tPetClass")
                        .WithMany("tBreeds")
                        .HasForeignKey("tPetClassfPetClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tPetClass");
                });

            modelBuilder.Entity("ExcelProject.Models.tComment", b =>
                {
                    b.HasOne("ExcelProject.Models.tDiscussion", "tDiscussion")
                        .WithMany("tComments")
                        .HasForeignKey("tDiscussionfArticleID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tMember", "tMember")
                        .WithMany("tComments")
                        .HasForeignKey("tMemberfMemberID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tDiscussion");

                    b.Navigation("tMember");
                });

            modelBuilder.Entity("ExcelProject.Models.tDiscussion", b =>
                {
                    b.HasOne("ExcelProject.Models.tMember", "tMember")
                        .WithMany("tDiscussions")
                        .HasForeignKey("tMemberfMemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tMember");
                });

            modelBuilder.Entity("ExcelProject.Models.tFavorite", b =>
                {
                    b.HasOne("ExcelProject.Models.tDiscussion", "tDiscussion")
                        .WithMany("tFavorites")
                        .HasForeignKey("tDiscussionfArticleID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tMember", "tMember")
                        .WithMany("tFavorites")
                        .HasForeignKey("tMemberfMemberID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tDiscussion");

                    b.Navigation("tMember");
                });

            modelBuilder.Entity("ExcelProject.Models.tFoundPet", b =>
                {
                    b.HasOne("ExcelProject.Models.tBreed", "tBreed")
                        .WithMany("tFoundPets")
                        .HasForeignKey("tBreedfBreedID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tCity", "tCity")
                        .WithMany("tFoundPets")
                        .HasForeignKey("tCityfCityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tMember", "tMember")
                        .WithMany("tFoundPets")
                        .HasForeignKey("tMemberfMemberID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tPetClass", "tPetClass")
                        .WithMany("tFoundPets")
                        .HasForeignKey("tPetClassfPetClassID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tRegion", "tRegion")
                        .WithMany("tFoundPets")
                        .HasForeignKey("tRegionfRegionID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tBreed");

                    b.Navigation("tCity");

                    b.Navigation("tMember");

                    b.Navigation("tPetClass");

                    b.Navigation("tRegion");
                });

            modelBuilder.Entity("ExcelProject.Models.tLike", b =>
                {
                    b.HasOne("ExcelProject.Models.tDiscussion", "tDiscussion")
                        .WithMany("tLikes")
                        .HasForeignKey("tDiscussionfArticleID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tMember", "tMember")
                        .WithMany("tLikes")
                        .HasForeignKey("tMemberfMemberID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tDiscussion");

                    b.Navigation("tMember");
                });

            modelBuilder.Entity("ExcelProject.Models.tLostPet", b =>
                {
                    b.HasOne("ExcelProject.Models.tPetMember", "tPetMember")
                        .WithMany("tLostPets")
                        .HasForeignKey("tPetMemberfPetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tPetMember");
                });

            modelBuilder.Entity("ExcelProject.Models.tMember", b =>
                {
                    b.HasOne("ExcelProject.Models.tCity", "tCity")
                        .WithMany("tMembers")
                        .HasForeignKey("tCityfCityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tRegion", "tRegion")
                        .WithMany("tMembers")
                        .HasForeignKey("tRegionfRegionID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tCity");

                    b.Navigation("tRegion");
                });

            modelBuilder.Entity("ExcelProject.Models.tOrder", b =>
                {
                    b.HasOne("ExcelProject.Models.tCity", "tCity")
                        .WithMany("tOrders")
                        .HasForeignKey("tCityfCityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tMember", "tMember")
                        .WithMany("tOrders")
                        .HasForeignKey("tMemberfMemberID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tPayWay", "tPayWay")
                        .WithMany("tOrders")
                        .HasForeignKey("tPayWayfPayWayID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tRegion", "tRegion")
                        .WithMany("tOrders")
                        .HasForeignKey("tRegionfRegionID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tCity");

                    b.Navigation("tMember");

                    b.Navigation("tPayWay");

                    b.Navigation("tRegion");
                });

            modelBuilder.Entity("ExcelProject.Models.tOrder_Detail", b =>
                {
                    b.HasOne("ExcelProject.Models.tOrder", "tOrder")
                        .WithMany("tOrder_Detail")
                        .HasForeignKey("tOrderfOrderID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tProduct", "tProduct")
                        .WithMany("tOrder_Detail")
                        .HasForeignKey("tProductfProductID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tOrder");

                    b.Navigation("tProduct");
                });

            modelBuilder.Entity("ExcelProject.Models.tPetMember", b =>
                {
                    b.HasOne("ExcelProject.Models.tBreed", "tBreed")
                        .WithMany("tPetMembers")
                        .HasForeignKey("tBreedfBreedID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tCity", "tCity")
                        .WithMany("tPetMembers")
                        .HasForeignKey("tCityfCityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tMember", "tMember")
                        .WithMany("tPetMembers")
                        .HasForeignKey("tMemberfMemberID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tPetClass", "tPetClass")
                        .WithMany("tPetMembers")
                        .HasForeignKey("tPetClassfPetClassID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tRegion", "tRegion")
                        .WithMany("tPetMembers")
                        .HasForeignKey("tRegionfRegionID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tBreed");

                    b.Navigation("tCity");

                    b.Navigation("tMember");

                    b.Navigation("tPetClass");

                    b.Navigation("tRegion");
                });

            modelBuilder.Entity("ExcelProject.Models.tProduct", b =>
                {
                    b.HasOne("ExcelProject.Models.tCategory", "tCategory")
                        .WithMany("tProducts")
                        .HasForeignKey("tCategoryfCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tSupplier", "tSupplier")
                        .WithMany("tProducts")
                        .HasForeignKey("tSupplierfSupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tCategory");

                    b.Navigation("tSupplier");
                });

            modelBuilder.Entity("ExcelProject.Models.tPurchase_Detials", b =>
                {
                    b.HasOne("ExcelProject.Models.tProduct", "tProduct")
                        .WithMany("tPurchase_Detials")
                        .HasForeignKey("tProductfProductID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tPurchase", "tPurchase")
                        .WithMany("tPurchase_Detials")
                        .HasForeignKey("tPurchasefPurchaseID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tSupplier", "tSupplier")
                        .WithMany("tPurchase_Detials")
                        .HasForeignKey("tSupplierfSupplierID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tProduct");

                    b.Navigation("tPurchase");

                    b.Navigation("tSupplier");
                });

            modelBuilder.Entity("ExcelProject.Models.tPurchaseShoppingCart", b =>
                {
                    b.HasOne("ExcelProject.Models.tProduct", "tProduct")
                        .WithMany("tPurchaseShoppingCarts")
                        .HasForeignKey("tProductfProductID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tSupplier", "tSupplier")
                        .WithMany("tPurchaseShoppingCarts")
                        .HasForeignKey("tSupplierfSupplierID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tProduct");

                    b.Navigation("tSupplier");
                });

            modelBuilder.Entity("ExcelProject.Models.tRegion", b =>
                {
                    b.HasOne("ExcelProject.Models.tCity", "tCity")
                        .WithMany("tRegions")
                        .HasForeignKey("tCityfCityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tCity");
                });

            modelBuilder.Entity("ExcelProject.Models.tReport", b =>
                {
                    b.HasOne("ExcelProject.Models.tDiscussion", "tDiscussion")
                        .WithMany("tReports")
                        .HasForeignKey("tDiscussionfArticleID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tMember", "tMember")
                        .WithMany("tReports")
                        .HasForeignKey("tMemberfMemberID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tDiscussion");

                    b.Navigation("tMember");
                });

            modelBuilder.Entity("ExcelProject.Models.tShoppingCart", b =>
                {
                    b.HasOne("ExcelProject.Models.tMember", "tMember")
                        .WithMany("tShoppingCarts")
                        .HasForeignKey("tMemberfMemberID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tProduct", "tProduct")
                        .WithMany("tShoppingCarts")
                        .HasForeignKey("tProductfProductID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tMember");

                    b.Navigation("tProduct");
                });

            modelBuilder.Entity("ExcelProject.Models.tSupplier", b =>
                {
                    b.HasOne("ExcelProject.Models.tCity", "tCity")
                        .WithMany("tSuppliers")
                        .HasForeignKey("tCityfCityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExcelProject.Models.tRegion", "tRegion")
                        .WithMany("tSuppliers")
                        .HasForeignKey("tRegionfRegionID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("tCity");

                    b.Navigation("tRegion");
                });

            modelBuilder.Entity("ExcelProject.Models.tBreed", b =>
                {
                    b.Navigation("tFoundPets");

                    b.Navigation("tPetMembers");
                });

            modelBuilder.Entity("ExcelProject.Models.tCategory", b =>
                {
                    b.Navigation("tProducts");
                });

            modelBuilder.Entity("ExcelProject.Models.tCity", b =>
                {
                    b.Navigation("tFoundPets");

                    b.Navigation("tMembers");

                    b.Navigation("tOrders");

                    b.Navigation("tPetMembers");

                    b.Navigation("tRegions");

                    b.Navigation("tSuppliers");
                });

            modelBuilder.Entity("ExcelProject.Models.tDiscussion", b =>
                {
                    b.Navigation("tComments");

                    b.Navigation("tFavorites");

                    b.Navigation("tLikes");

                    b.Navigation("tReports");
                });

            modelBuilder.Entity("ExcelProject.Models.tMember", b =>
                {
                    b.Navigation("tAdoptMessages");

                    b.Navigation("tComments");

                    b.Navigation("tDiscussions");

                    b.Navigation("tFavorites");

                    b.Navigation("tFoundPets");

                    b.Navigation("tLikes");

                    b.Navigation("tOrders");

                    b.Navigation("tPetMembers");

                    b.Navigation("tReports");

                    b.Navigation("tShoppingCarts");
                });

            modelBuilder.Entity("ExcelProject.Models.tOrder", b =>
                {
                    b.Navigation("tOrder_Detail");
                });

            modelBuilder.Entity("ExcelProject.Models.tPayWay", b =>
                {
                    b.Navigation("tOrders");
                });

            modelBuilder.Entity("ExcelProject.Models.tPetClass", b =>
                {
                    b.Navigation("tBreeds");

                    b.Navigation("tFoundPets");

                    b.Navigation("tPetMembers");
                });

            modelBuilder.Entity("ExcelProject.Models.tPetMember", b =>
                {
                    b.Navigation("tAdoptMessages");

                    b.Navigation("tLostPets");
                });

            modelBuilder.Entity("ExcelProject.Models.tProduct", b =>
                {
                    b.Navigation("tOrder_Detail");

                    b.Navigation("tPurchaseShoppingCarts");

                    b.Navigation("tPurchase_Detials");

                    b.Navigation("tShoppingCarts");
                });

            modelBuilder.Entity("ExcelProject.Models.tPurchase", b =>
                {
                    b.Navigation("tPurchase_Detials");
                });

            modelBuilder.Entity("ExcelProject.Models.tRegion", b =>
                {
                    b.Navigation("tFoundPets");

                    b.Navigation("tMembers");

                    b.Navigation("tOrders");

                    b.Navigation("tPetMembers");

                    b.Navigation("tSuppliers");
                });

            modelBuilder.Entity("ExcelProject.Models.tSupplier", b =>
                {
                    b.Navigation("tProducts");

                    b.Navigation("tPurchaseShoppingCarts");

                    b.Navigation("tPurchase_Detials");
                });
#pragma warning restore 612, 618
        }
    }
}
